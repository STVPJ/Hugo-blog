<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Product Thinking on Steve&#39;s Blog</title>
        <link>https://stvpj.com/categories/product-thinking/</link>
        <description>Recent content in Product Thinking on Steve&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <copyright>Steve</copyright>
        <lastBuildDate>Sun, 20 Apr 2025 10:00:00 +0000</lastBuildDate><atom:link href="https://stvpj.com/categories/product-thinking/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>From Project to Product: A Paradigm Shift for the Age of Software</title>
        <link>https://stvpj.com/p/from-project-to-product/</link>
        <pubDate>Sun, 20 Apr 2025 10:00:00 +0000</pubDate>
        
        <guid>https://stvpj.com/p/from-project-to-product/</guid>
        <description>&lt;img src="https://stvpj.com/p/from-project-to-product/header.png" alt="Featured image of post From Project to Product: A Paradigm Shift for the Age of Software" /&gt;&lt;p&gt;&lt;em&gt;By Mik Kersten | Summary by STVPJ&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;As we charge into the digital era, the rules of business are rapidly changing. Companies that once dominated their industries are finding themselves outpaced by nimble startups and tech giants who‚Äôve mastered the art of software delivery. In his groundbreaking book, &lt;em&gt;Project to Product&lt;/em&gt;, Mik Kersten reveals why traditional project-based management models are failing and offers a new framework‚Äîthe &lt;strong&gt;Flow Framework&lt;/strong&gt;‚Äîto help organizations survive and thrive in the Age of Software.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-the-premise-why-the-project-model-is-obsolete&#34;&gt;üìâ The Premise: Why the Project Model is Obsolete
&lt;/h2&gt;&lt;p&gt;Kersten opens the book with a compelling argument: the project-based structures that powered businesses through the Age of Mass Production are no longer fit for today‚Äôs software-driven world. Instead of treating software delivery as a series of finite, scope-bound projects, companies must adopt a &lt;strong&gt;product mindset&lt;/strong&gt;‚Äîfocusing on long-term value streams and continuous delivery.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;We&amp;rsquo;re managing software like we&amp;rsquo;re still building bridges.&amp;rdquo; ‚Äî Mik Kersten&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The old model, built for predictability and control, stifles innovation. It creates silos, breaks accountability, and fails to account for the non-linear, iterative nature of modern software development.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-the-flow-framework-a-new-way-to-think-about-work&#34;&gt;üîÑ The Flow Framework: A New Way to Think About Work
&lt;/h2&gt;&lt;p&gt;At the core of the book is the &lt;strong&gt;Flow Framework&lt;/strong&gt;, Kersten‚Äôs blueprint for transforming how organizations manage software delivery. It introduces four types of work items that flow through software value streams:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Features&lt;/strong&gt; ‚Äì User-driven enhancements&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Defects&lt;/strong&gt; ‚Äì Quality issues&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Risks&lt;/strong&gt; ‚Äì Security, compliance, or other risk-related work&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Debts&lt;/strong&gt; ‚Äì Technical or infrastructure improvements&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These ‚ÄúFlow Items‚Äù are the units of measurement in the Flow Framework. Organizations then track &lt;strong&gt;Flow Metrics&lt;/strong&gt; like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Flow Velocity&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Flow Efficiency&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Flow Time&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Flow Load&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The ultimate goal? &lt;strong&gt;Aligning IT with business outcomes&lt;/strong&gt; in a measurable, real-time way.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-the-age-of-software-and-the-turning-point&#34;&gt;‚öôÔ∏è The Age of Software and the Turning Point
&lt;/h2&gt;&lt;p&gt;Kersten situates this shift in the broader context of Carlota Perez‚Äôs theory of technological revolutions. We are now entering the &lt;strong&gt;Deployment Period&lt;/strong&gt; of the &lt;strong&gt;Age of Software&lt;/strong&gt;‚Äîthe point where companies must either adapt to software-driven ways of working or fade into irrelevance.&lt;/p&gt;
&lt;p&gt;Companies like &lt;strong&gt;Nokia&lt;/strong&gt; failed, not because they didn‚Äôt try to adapt, but because they measured success with flawed metrics‚Äîlike Agile adoption rates‚Äîrather than true value delivery.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-value-streams-the-heart-of-the-product-model&#34;&gt;üß≠ Value Streams: The Heart of the Product Model
&lt;/h2&gt;&lt;p&gt;Kersten urges organizations to orient around &lt;strong&gt;value streams&lt;/strong&gt;, not departments or projects. A value stream represents the end-to-end activities required to deliver value to the customer. Rather than shifting people between projects, companies should:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Fund long-lived product teams&lt;/strong&gt;, not one-off projects&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Track flow&lt;/strong&gt;, not just budget and timeline&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Integrate tooling into a seamless Value Stream Network&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-case-studies-and-epiphanies&#34;&gt;üìö Case Studies and Epiphanies
&lt;/h2&gt;&lt;p&gt;Throughout the book, Kersten shares stories of transformation‚Äîboth failed and successful. He reflects on lessons from:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The BMW Leipzig plant (a marvel of lean production)&lt;/li&gt;
&lt;li&gt;Nokia‚Äôs Agile rollout&lt;/li&gt;
&lt;li&gt;A global bank‚Äôs $1B transformation gone sideways&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;He outlines &lt;strong&gt;three epiphanies&lt;/strong&gt; from his journey:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Architecture must align to value stream&lt;/strong&gt;, not the reverse&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Disconnected toolchains destroy productivity&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Software is not a pipeline‚Äîit‚Äôs a collaborative network&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-why-most-digital-transformations-fail&#34;&gt;üí• Why Most Digital Transformations Fail
&lt;/h2&gt;&lt;p&gt;Many organizations fail despite well-funded Agile/DevOps efforts. Kersten identifies three core issues:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Focus on &lt;strong&gt;activities&lt;/strong&gt; (e.g., Agile training), not &lt;strong&gt;outcomes&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Lack of &lt;strong&gt;business‚ÄìIT alignment&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Inability to &lt;strong&gt;see or measure value flow&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The solution is not more tooling or process frameworks‚Äîit‚Äôs a shift in mindset and management logic.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-beyond-the-turning-point&#34;&gt;üöÄ Beyond the Turning Point
&lt;/h2&gt;&lt;p&gt;Kersten finishes with a clear call to action. The Age of Software is here, and those who fail to adapt risk becoming obsolete. But those who embrace product thinking and build connected &lt;strong&gt;Value Stream Networks&lt;/strong&gt; will:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Deliver better customer outcomes&lt;/li&gt;
&lt;li&gt;Make smarter investments&lt;/li&gt;
&lt;li&gt;Attract and retain top talent&lt;/li&gt;
&lt;li&gt;Regain competitive advantage&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-tldr-key-takeaways&#34;&gt;üß† TL;DR: Key Takeaways
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;The &lt;strong&gt;project model is broken&lt;/strong&gt; for modern software delivery.&lt;/li&gt;
&lt;li&gt;The &lt;strong&gt;Flow Framework&lt;/strong&gt; replaces it with measurable, value-centric metrics.&lt;/li&gt;
&lt;li&gt;Shift focus from projects to &lt;strong&gt;products and value streams&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Digital transformation fails without visibility into &lt;strong&gt;Flow&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;The Age of Software demands a &lt;strong&gt;new management paradigm&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;Inspired by Mik Kersten‚Äôs Project to Product. For more, visit &lt;a class=&#34;link&#34; href=&#34;https://projecttoproduct.org&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;projecttoproduct.org&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Agile Isn‚Äôt What You Think</title>
        <link>https://stvpj.com/p/agile-pitfalls-measuring-value/</link>
        <pubDate>Sun, 20 Apr 2025 09:00:00 +0000</pubDate>
        
        <guid>https://stvpj.com/p/agile-pitfalls-measuring-value/</guid>
        <description>&lt;img src="https://stvpj.com/p/agile-pitfalls-measuring-value/header.png" alt="Featured image of post Agile Isn‚Äôt What You Think" /&gt;&lt;h2 id=&#34;the-pitfalls-of-one-size-fits-all-agile-why-most-agile-implementations-miss-the-point&#34;&gt;The Pitfalls of One-Size-Fits-All Agile: Why Most Agile Implementations Miss the Point
&lt;/h2&gt;&lt;p&gt;Agile is everywhere. Or so it seems.&lt;/p&gt;
&lt;p&gt;Walk into nearly any modern software organization and you‚Äôll be told they ‚Äúdo agile.‚Äù There are stand-ups. Sprints. Story points. Jira boards. Retros. There&amp;rsquo;s probably a release train or two. On paper, it looks like agility. But in reality, it&amp;rsquo;s anything but.&lt;/p&gt;
&lt;p&gt;Despite widespread adoption of agile methodologies and frameworks, most companies still fail to embody what agile truly stands for. What we‚Äôre seeing isn‚Äôt agile‚Äîit‚Äôs agile theater. A performance of rituals devoid of the mindset and principles that actually make agile work.&lt;/p&gt;
&lt;p&gt;Why? Because no one wants to talk about the real reason agile fails in big organizations:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;True agility means you won‚Äôt know exactly how long something will take, or how much it will cost, before you begin.&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;That‚Äôs the uncomfortable truth. And it&amp;rsquo;s the one truth that almost no one in a boardroom wants to hear.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;the-illusion-of-predictability&#34;&gt;The Illusion of Predictability
&lt;/h2&gt;&lt;p&gt;Let‚Äôs be clear: &lt;strong&gt;agile is not a framework. It‚Äôs a mindset.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;When the Agile Manifesto was written, it was a response to the rigidity of traditional software development‚Äîa world in which long-term plans rarely survived contact with reality. Agile promised something better: flexibility, collaboration, and continuous delivery of value.&lt;/p&gt;
&lt;p&gt;But large organizations have tried to retrofit agile into the very structures it was meant to replace. They‚Äôve imposed predictability on top of adaptability. They&amp;rsquo;ve institutionalized delivery cadences and backlogs and roadmaps and burndown charts in an effort to make agile feel safe and familiar. In doing so, they&amp;rsquo;ve fundamentally undermined it.&lt;/p&gt;
&lt;p&gt;Frameworks like SAFe and LeSS may offer a sense of control at scale, but they often do so by compromising on the core agile principle: &lt;strong&gt;embrace uncertainty&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Because at the heart of true agility is a simple reality: &lt;em&gt;you are building something new, and you cannot plan certainty into discovery.&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;why-agile-needs-uncertainty&#34;&gt;Why Agile Needs Uncertainty
&lt;/h2&gt;&lt;p&gt;The Agile Manifesto begins with individuals and interactions over processes and tools. It emphasizes working software over comprehensive documentation. It encourages customer collaboration over contract negotiation. And above all, it values responding to change over following a plan.&lt;/p&gt;
&lt;p&gt;These are not project management practices. These are philosophical commitments.&lt;/p&gt;
&lt;p&gt;And if you take them seriously, then it follows that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You &lt;strong&gt;cannot guarantee fixed scopes, timelines, or budgets&lt;/strong&gt; up front.&lt;/li&gt;
&lt;li&gt;You &lt;strong&gt;will learn things mid-flight&lt;/strong&gt; that will force you to change direction.&lt;/li&gt;
&lt;li&gt;You &lt;strong&gt;must give teams the autonomy&lt;/strong&gt; to solve problems in ways that aren&amp;rsquo;t fully spec‚Äôd before they begin.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is what makes agile work‚Äîand what makes it so uncomfortable for command-and-control management styles.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;velocity-is-not-value&#34;&gt;Velocity Is Not Value
&lt;/h2&gt;&lt;p&gt;In the absence of real agility, organizations default to what they can measure. And the easiest thing to measure is &lt;strong&gt;velocity&lt;/strong&gt;‚Äîhow many story points a team completes per sprint. But velocity is a local optimization. It tells you how &lt;em&gt;busy&lt;/em&gt; your team is, not how &lt;em&gt;effective&lt;/em&gt; they are.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Velocity is about output. Agile is about outcomes.&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;You can double your team‚Äôs velocity and still build something no one wants. You can hit every sprint goal and still miss the market. You can have high throughput and zero impact.&lt;/p&gt;
&lt;p&gt;This is where most agile transformations break down: they prioritize activity over value.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;so-what-should-we-measure&#34;&gt;So, What Should We Measure?
&lt;/h2&gt;&lt;p&gt;If agile is about delivering value, then &lt;strong&gt;value&lt;/strong&gt; must be what we measure.&lt;/p&gt;
&lt;p&gt;But value isn‚Äôt a simple thing. It‚Äôs not a number you pull out of Jira. It‚Äôs not a burndown chart or a feature count.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Value is what helps your organization succeed.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;It shows up in:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Increased revenue&lt;/li&gt;
&lt;li&gt;Reduced customer churn&lt;/li&gt;
&lt;li&gt;Improved user satisfaction&lt;/li&gt;
&lt;li&gt;Greater market share&lt;/li&gt;
&lt;li&gt;Stronger engagement or retention&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These are &lt;strong&gt;lagging indicators&lt;/strong&gt; of success‚Äîthey tell you after the fact whether what you built actually made a difference. But because they lag, they‚Äôre not always useful for day-to-day decision-making.&lt;/p&gt;
&lt;p&gt;That‚Äôs where &lt;strong&gt;proxy metrics&lt;/strong&gt; come in.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;proxy-metrics-aligning-toward-impact&#34;&gt;Proxy Metrics: Aligning Toward Impact
&lt;/h2&gt;&lt;p&gt;To make agile actionable in the short term, teams need &lt;strong&gt;leading indicators&lt;/strong&gt; that signal whether they‚Äôre moving in the right direction.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Engineering&lt;/strong&gt; teams focus on delivery health:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cycle time&lt;/li&gt;
&lt;li&gt;Deployment frequency&lt;/li&gt;
&lt;li&gt;Lead time for changes&lt;/li&gt;
&lt;li&gt;Change failure rate&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These help identify bottlenecks, inefficiencies, and delivery risks. They don‚Äôt measure value directly‚Äîbut they indicate how reliably the team can deliver value when it‚Äôs found.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Product&lt;/strong&gt; teams focus on signals of product-market fit:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Activation rates&lt;/li&gt;
&lt;li&gt;Feature adoption&lt;/li&gt;
&lt;li&gt;Retention curves&lt;/li&gt;
&lt;li&gt;Customer satisfaction scores&lt;/li&gt;
&lt;li&gt;Net Promoter Scores (NPS)&lt;/li&gt;
&lt;li&gt;Task success rates&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These help gauge whether users are finding what‚Äôs being built useful and valuable.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The real power comes from aligning these two sets of indicators: ensuring that &lt;strong&gt;delivery teams are enabled to move fast and safely&lt;/strong&gt;, while &lt;strong&gt;product teams are focused on the highest-leverage problems.&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;efficiency-vs-effectiveness-know-the-difference&#34;&gt;Efficiency vs. Effectiveness: Know the Difference
&lt;/h2&gt;&lt;p&gt;Here‚Äôs the critical distinction that many agile teams blur:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Delivery teams&lt;/strong&gt; should be optimized for &lt;strong&gt;efficiency&lt;/strong&gt;‚Äîto execute with speed, quality, and stability.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Product teams&lt;/strong&gt; should be optimized for &lt;strong&gt;effectiveness&lt;/strong&gt;‚Äîto ensure that what gets delivered actually matters.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you optimize only for speed, you risk building the wrong thing faster.&lt;br&gt;
If you optimize only for insight, you risk discovering great opportunities too slowly.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Agile is about continuously improving both sides of that equation.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;That means:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Creating a &lt;strong&gt;clear separation of concerns&lt;/strong&gt; between prioritization and execution.&lt;/li&gt;
&lt;li&gt;Funding and structuring teams around &lt;strong&gt;outcomes, not projects&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Giving product and delivery teams &lt;strong&gt;joint ownership of goals&lt;/strong&gt;, but distinct accountability for &lt;strong&gt;what&lt;/strong&gt; gets done and &lt;strong&gt;how&lt;/strong&gt; it gets done.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;agility-without-illusions&#34;&gt;Agility Without Illusions
&lt;/h2&gt;&lt;p&gt;The real tragedy of faux-agile is that it gives organizations the illusion of adaptability without requiring any of the discipline or humility that true agility demands.&lt;/p&gt;
&lt;p&gt;Agile is not about adopting a framework. It‚Äôs about cultivating a mindset:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;One that values &lt;strong&gt;learning over knowing&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;One that embraces &lt;strong&gt;change over control&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;One that prioritizes &lt;strong&gt;customer outcomes over internal process fidelity&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When you strip away the jargon, the tickets, and the tooling, this is the real work:&lt;br&gt;
‚Üí &lt;strong&gt;Helping organizations get comfortable with uncertainty.&lt;/strong&gt;&lt;br&gt;
‚Üí &lt;strong&gt;Focusing teams on value, not velocity.&lt;/strong&gt;&lt;br&gt;
‚Üí &lt;strong&gt;And measuring success not by how much you deliver‚Äîbut by how much it matters.&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;final-thought&#34;&gt;Final Thought
&lt;/h2&gt;&lt;p&gt;If your agile process gives you the illusion of predictability but none of the adaptability, it‚Äôs not agile. It‚Äôs a fa√ßade.&lt;/p&gt;
&lt;p&gt;And if your stakeholders expect certainty in timelines and cost before any real discovery has happened, they‚Äôre not signing up for agile‚Äîthey‚Äôre asking for waterfall with daily standups.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The question isn‚Äôt ‚Äúare we agile?‚Äù&lt;br&gt;
The real question is: &lt;strong&gt;do we have the courage to let go of control in pursuit of value?&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>Why Product Managers Should Trust Their Gut When Data Falls Short</title>
        <link>https://stvpj.com/p/why-product-managers-should-trust-their-gut-when-data-falls-short/</link>
        <pubDate>Sun, 20 Apr 2025 09:08:36 +0100</pubDate>
        
        <guid>https://stvpj.com/p/why-product-managers-should-trust-their-gut-when-data-falls-short/</guid>
        <description>&lt;img src="https://stvpj.com/p/why-product-managers-should-trust-their-gut-when-data-falls-short/header.png" alt="Featured image of post Why Product Managers Should Trust Their Gut When Data Falls Short" /&gt;&lt;h1 id=&#34;why-product-managers-should-trust-their-gut-when-data-falls-short&#34;&gt;Why Product Managers Should Trust Their Gut When Data Falls Short
&lt;/h1&gt;&lt;p&gt;As Product Managers, we‚Äôre often told to ‚Äúlet the data speak‚Äù and to rely on hard evidence to validate our hypotheses. And rightly so‚Äîdata is a powerful tool for minimizing risk and understanding user behavior. However, there‚Äôs a vital piece of the product innovation puzzle that is often overlooked: intuition. When the right data isn‚Äôt available or doesn‚Äôt exist, your gut can be your most valuable ally.&lt;/p&gt;
&lt;p&gt;In fact, some of the most transformative innovations we celebrate today were born in moments when data was either nonexistent or irrelevant. Let‚Äôs explore why Product Managers shouldn‚Äôt shy away from trusting their instincts when navigating uncharted waters.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;data-is-a-compass-not-a-crystal-ball&#34;&gt;Data Is a Compass, Not a Crystal Ball
&lt;/h2&gt;&lt;p&gt;Marty Cagan, author of &lt;em&gt;Inspired&lt;/em&gt;, emphasizes the limitations of relying solely on data. He writes, &lt;em&gt;‚ÄúData is essential, but it only tells you about the past. If you want to invent the future, you have to look beyond the data.‚Äù&lt;/em&gt; Data can show us what has worked before, but it rarely points to what will work in the future, especially when you‚Äôre venturing into unexplored territory.&lt;/p&gt;
&lt;p&gt;When a Product Manager tries to innovate in a space that‚Äôs new or undefined, historical data often falls short. Imagine being the first to propose something like the iPhone. What data would have validated that hypothesis? None. Yet, Steve Jobs famously said, &lt;em&gt;‚ÄúPeople don‚Äôt know what they want until you show it to them.‚Äù&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;visionary-thinking-often-precedes-data&#34;&gt;Visionary Thinking Often Precedes Data
&lt;/h2&gt;&lt;p&gt;Some of the most game-changing innovations weren‚Äôt built on data‚Äîthey were built on a deep understanding of human needs and the courage to make bold decisions. Steve Jobs‚Äô intuition about user experience led to products that redefined industries. Had Apple waited for market research to prove demand, the iPhone might never have happened.&lt;/p&gt;
&lt;p&gt;Similarly, Pawel Huryn, product leader and author, argues that &lt;em&gt;‚Äúgreat product managers are great storytellers‚Äîthey imagine a better world and then find a way to make it real.‚Äù&lt;/em&gt; In the early stages of product development, storytelling and vision often fill the gaps where data cannot.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;when-to-trust-your-gut&#34;&gt;When to Trust Your Gut
&lt;/h2&gt;&lt;p&gt;Trusting your gut doesn‚Äôt mean ignoring data‚Äîit means knowing when it isn‚Äôt enough. Here are some scenarios where intuition can be invaluable:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;When entering uncharted markets:&lt;/strong&gt; No historical data exists for truly innovative ideas.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;When experimenting with new paradigms:&lt;/strong&gt; Early-stage products often lack the metrics to guide decisions.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;When responding to qualitative insights:&lt;/strong&gt; User interviews and anecdotal evidence sometimes reveal truths that numbers can‚Äôt.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Pawel Huryn puts it succinctly: &lt;em&gt;‚ÄúYour gut feeling is your subconscious mind processing years of experience, knowledge, and observations. It‚Äôs not irrational; it‚Äôs informed.‚Äù&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;balancing-data-and-intuition&#34;&gt;Balancing Data and Intuition
&lt;/h2&gt;&lt;p&gt;The key is to strike a balance. Use data when it‚Äôs available and relevant, but don‚Äôt let the absence of perfect data paralyze you. Great Product Managers are not just analysts‚Äîthey‚Äôre visionaries who can navigate ambiguity and take calculated risks.&lt;/p&gt;
&lt;p&gt;As Marty Cagan reminds us, &lt;em&gt;‚ÄúAt the end of the day, your job is to solve problems in a way that creates value for your customers and your company. Don‚Äôt let data become an excuse for inaction.‚Äù&lt;/em&gt;&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
